<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8">
  <title>MayGame</title>
  <meta name="description" content="No description">
  <meta name="author" content="Some dude">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- #region -->
<script id="gun_cdn_script" src="https://cdn.jsdelivr.net/npm/gun/gun.js"></script>
<script id="sea_cdn_script" src="https://cdn.jsdelivr.net/npm/gun/sea.js"></script>
  <script id="wsjs_innerscript" src="js/core/wsjs.js"></script>
  <link id="css_styles_core" rel="stylesheet" href="css/styles.css" />
</head>
<body >
<style>
*{
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}
iframe{
        /* position: fixed; */
    z-index: 0;
    display: block;
    width: 100%;
    height: 100%;
    border: none;
    overflow-y: auto;
    overflow-x: hidden;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    pointer-events: all;
}
        /* html 
{
 overflow: auto;
} */
 
html, body, iframe 
{
    height: 100vh; 
    width: 100vw;
    border: none;
    overflow: hidden;
}
.container{
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-rows: 30vh  auto 10vh 10vh;
    grid-template-columns: 1fr 1fr 0.3fr;
    grid-template-areas: 
    "a b map"
    "a b reserved"
    "footer footer footerb"
    "menu_bar menu_bar menu_bar"
    ;
    }
.header{
    grid-area: header;
    background-color: pink;
}
.menu_bar{
    grid-area: menu_bar;
}
.a{
    grid-area: a;
    background-color: lightcoral;
}
.b{
    grid-area: b;
    background-color: violet;
}
.map{
    grid-area: map;
    background-color: palevioletred;
}
.footer{
    grid-area: footer;
    background-color: pink;
}
.footerb{
    background-color: rgb(172, 77, 172);
    grid-area: footerb;
}
</style>
<div class="container">
<div id="menu" style="position: absolute; z-index: 2147483210;grid-area: menu_bar; bottom: 0; pointer-events: all;">
    <button onclick="default_sign_in();" style="color: seagreen;">Quick sign in</button>
    <button onclick="force_create_new_user();">Force new user</button>
    <input type="text" id="text_pair" placeholder="paste your key here or log in with default">
    <br>
    <button onclick="toggle(quests_layer)">Quests</button>
    <button onclick="toggle(quests_add_layer)">Quests Add/Edit</button>
    <button onclick="toggle(profile_layer)">Profile</button>
    <button onclick="toggle(map_layer)">Map</button>
    <!-- <button onclick="toggle_pevents(frame_hud)">Hud</button> -->
    <button onclick="toggle(curr_layer)" style="background-color: mediumpurple;">Currencies</button>
    <button onclick="toggle(items_layer)" style="background-color: mediumpurple;">Items</button>
    <!-- <button onclick="toggle(test_layer)" style="background-color: mediumturquoise;">Test</button> -->
    <!-- <input type="text" value=""> -->
    <!-- <button onclick="window.frames.test.postMessage('Lunar blessings to you all!','https://maygame.xxx')">Send test message</button> -->
    <!-- <button onclick="gun.get('test').get('stuff').put({'hud_test':'from_core'});">GUN TEST</button> -->
    <!-- <div id="message_div"></div> -->
</div><br>
<!-- #region -->
<div id="quests_layer" class="layer_b b" style="display: none; ">
    <!-- there's no styling for the layer_b. temporaly disabling 'layer' this way -->
    <iframe scrolling="no"name="quests" src="<%= quests_url %>" id="frame_quests" style="border: 0; width: 100%; height: 100%"></iframe>
</div>
<div id="quests_add_layer" class="layer_b b" style="display: none; ">
    <iframe scrolling="no"name="quests_add" src="<%= quests_add_url %>" id="frame_quests_add" style="border: 0; width: 100%; height: 100%"></iframe>
</div>
<!-- <div id="hud_layer" class="layer_b" style="z-index: -5;">
    <iframe scrolling="no"name="hud" src="<%= hud_url %>" id="frame_hud" style="border: 0; width: 100%; height: 100%; z-index: -5;"></iframe>
</div> -->
<div id="map_layer" class="layer_b map" style="display: none; right: 0;">
    <iframe scrolling="no"name="map" src="<%= map_url %>" id="frame_map" style="border: 0; width: 100%; height: 100%"></iframe>
</div>
<div id="profile_layer" class="layer_b" style="display: none;">
    <iframe scrolling="no"name="profile" src="<%= profile_url %>" id="frame_profile" style="border: 0; width: 100%; height: 100%"></iframe>
</div>
<div id="items_layer" class="layer_b a" style="display: none;">
    <iframe scrolling="no"name="items" src="<%= items_url %>" id="frame_items" style="border: 0; width: 100%; height: 100%"></iframe>
</div>
<div id="curr_layer" class="layer_b" style="display: none;">
<div style="
    border: 5px solid royalblue; background-color: midnightblue;
    top: 0; left: 0; right: 0; bottom: 0;
    height: 100%; width: 100%;"
    >
    <iframe scrolling="no"name="currencies" src="<%= currency_url %>" id="frame_profile" style="border: 0; width: 100%; height: 100%"></iframe>
</div></div>
<div class="footer"><p>some footer stuff</p></div>
<div class="footer_b">
    <p>Current action: <a>flipper key onewire</a></p>
    <button>hotbar key 1</button>
    <button>hotbar key 2</button>
</div>
</div>
<!-- <div id="test_layer" class="layer_b" style="display: none;">
    <iframe scrolling="no"name="test" src="frames/test" id="frame_test" style="border: 0; width: 100%; height: 100%"></iframe>
</div> -->
<!-- #endregion -->
<script defer id="js_init">
    (()=>{
        let newFid="quests_add_new_fid";
        let qed=document.getElementById('frame_quests_add');
        qed.src=qed.src.split('?')[0]+`?fid=${newFid}`;
    })();
</script>
<script>
    var peers=["<%= peers %>"];//exactly one peer for now.
    var gun = Gun({peers:peers});
    var sea = Gun.SEA;
    const store_dir="nouveau_dossier"
    var user = gun.user().recall({ sessionStorage: true }, () => {
      logIn()
    });
    var keyring = {};//todo
    
    gun.on('auth', () => {
        logIn();
    })
    function frame_pub(frame, e, topic){
        frame.postMessage({'your_topic_pub':{e},'soul': topic});
        console.log('from frame pub: ',frame, e)
    }
    var user_pub;
    window.onmessage=(e)=>{
        // if(e.data.gunput_sub){
        //     user.get(store_dir).get(e.data.soul).get(e.data.subdir).put(JSON.parse(e.data.gunput_sub))}
        // else
        if(e.data.frame_click){
            console.log('click on', e.source, e.data)
        }
        else
        if(e.data.gunput){
            // console.log("gunput: ", e.data.gunput);
            if(validate_access(e.source,e.data.soul))//todo: memoize
            user.get(store_dir).get(e.data.soul).put(JSON.parse(e.data.gunput))
        }
        else
        if(e.data.gundelete){
            if(validate_access(e.source,e.data.gundelete))//todo: memoize
            {
            console.log('gundelete: ', e.data);
            user.get(store_dir).get(e.data.gundelete).put(null);
            }
        }
        else
        if(e.data.gun_sub)
        {
            let frame_subscriber = e.source;
            let soul = e.data.gun_sub;
            if(!validate_access(frame_subscriber,soul))
            return false;
            // console.log(frame_subscriber, "subscribed to ", soul, "topic")
            user.get(store_dir).get(soul).on((e)=>{
                frame_pub(frame_subscriber,e, soul);
                // frame_subscriber.postMessage({'your_topic_pub':{e}});
                // console.log('items/bookmarks fires pub: ',e)
            }),{change: true}
        }
        else
        if(e.data.frame_resize){
            let fname = e.source.name;
            // console.log('resize',fname,e.data.frame_resize,document.getElementsByName(fname)[0].parentElement.style)
            document.getElementsByName(fname)[0].style.width=e.data.frame_resize.width;
            document.getElementsByName(fname)[0].style.height=e.data.frame_resize.height;
        }
        // if(e.data.gunrelay){
        //     let translated=JSON.parse(e.data.gunrelay)
        //     // translated?._.#=user.is+translated._['#']
        //     console.log('translated', translated)
        //     gun._.on('in',JSON.parse(e.data.gunrelay));
        //     console.log(e.data.gunrelay);
        // }
        // message_div.innerText=e.data; console.log(e.data)
        else
        if(e.data.topic=='pair_request'){
            if(pairs[e.source.name])
            e.source.postMessage({'topic':'your_pair','pair':pairs[e.source.name]})
            else(console.log('No pair found for '+e.source.name))
        }
        else
        if(e.data.topic=='data_request'){
            console.log('data request:');
            console.log(e.data);
            console.log('from:');
            console.log(e.source);
            let msgSource=e.source;//todo:remember
            msgSource.postMessage({'rid':e.data.rid,'body':'Mock response','topic':'req_response'});
        }

    }
    function validate_access(source,soul){
        if(pubres[soul]){console.log('access to', soul, "granted to frame: ", source); return true;}
        else{console.log('access to', soul, "denied to frame: ", source); return false;};
        //todo: better access management
    }
    pubres={'map/gps_map_click':true,
    'map/gps_my_pos':true,
    'map/last_bookmark':true,
    'map/show':true,
    'items/edit':true,
    'items/list':true
}
    //#region Sign in
async function default_sign_in(){
    let text_pair = document.getElementById('text_pair').value;
    let pair = localStorage.getItem('user_pair');
    if(text_pair){console.log('Logging in with a pasted key', pair);
    pair=JSON.parse(text_pair);//fixme: validation
    }
    else{
    if(!pair){console.log('No pair stored. Creating.');
    pair = await sea.pair();
    localStorage.setItem('user_pair', JSON.stringify(pair));
    console.log('Logged in as a new user.', pair);
    }
    else { pair = JSON.parse(pair); console.log('logged in using saved key: ',pair);}}
    user.auth(pair);
}
async function force_create_new_user(){
    let pair = await sea.pair();
    localStorage.setItem('user_pair', JSON.stringify(pair));
    user.auth(pair);
}
    function logIn(){console.info('Logged in as ', user.is);
    user_pub=user.is.pub;
    let userN= user.get(store_dir);
    // userN.get('items/bookmarks').on((e)=>{console.log('core bookmarks gunfire',e)},{change: true});
    userN.get('map/last_bookmark').on((msg)=>{console.log('core map bm: ', msg)});
    userN.get('map/gps_my_pos').on((crd)=>{console.log('core got user/gps pos, ',crd)});//tmp, fixme
    userN.get('map/gps_map_click').on((crd)=>{console.log('core got user/map_click, ',crd)});//rmmmber, then off on relog
    var frames = window.frames; // or // var frames = window.parent.frames;
    for (var i = 0; i < frames.length; i++) {
        frames[i].postMessage({login: user.is.pub}, 'https://maygame.xxx');//todo track frame domains
    }
}

    async function create_key() {
temp_key =  await sea.pair();
document.getElementById("current_key").value=JSON.stringify(temp_key);
}
</script> 
<script>
    function toggle_pevents(target){
        if(target.style.pointerEvents=='none')
        target.style.pointerEvents='all'
        else target.style.pointerEvents = 'none'
    }
</script>
<script>
</script>
</body>
</html>